{"ast":null,"code":"'use strict';\n\nvar duration = /(-?(?:\\d+\\.?\\d*|\\d*\\.?\\d+)(?:e[-+]?\\d+)?)\\s*([a-zµμ]*)/ig;\nmodule.exports = parse; // enable default import syntax in typescript\n\nmodule.exports.default = parse;\n/**\r\n * conversion ratios\r\n */\n\nparse.nanosecond = parse.ns = 1 / 1e6;\nparse['µs'] = parse['μs'] = parse.us = parse.microsecond = 1 / 1e3;\nparse.millisecond = parse.ms = 1;\nparse.second = parse.sec = parse.s = parse.ms * 1000;\nparse.minute = parse.min = parse.m = parse.s * 60;\nparse.hour = parse.hr = parse.h = parse.m * 60;\nparse.day = parse.d = parse.h * 24;\nparse.week = parse.wk = parse.w = parse.d * 7;\nparse.month = parse.b = parse.d * (365.25 / 12);\nparse.year = parse.yr = parse.y = parse.d * 365.25;\n/**\r\n * convert `str` to ms\r\n *\r\n * @param {String} str\r\n * @param {String} format\r\n * @return {Number}\r\n */\n\nfunction parse(str = '', format = 'ms') {\n  var result = null; // ignore commas\n\n  str = str.replace(/(\\d),(\\d)/g, '$1$2');\n  str.replace(duration, function (_, n, units) {\n    units = parse[units] || parse[units.toLowerCase().replace(/s$/, '')];\n    if (units) result = (result || 0) + parseFloat(n, 10) * units;\n  });\n  return result && result / parse[format];\n}","map":{"version":3,"sources":["/home/lorancecall/Projects/vuejs-tutorial/testpage/node_modules/parse-duration/index.js"],"names":["duration","module","exports","parse","default","nanosecond","ns","us","microsecond","millisecond","ms","second","sec","s","minute","min","m","hour","hr","h","day","d","week","wk","w","month","b","year","yr","y","str","format","result","replace","_","n","units","toLowerCase","parseFloat"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAG,0DAAf;AAEAC,MAAM,CAACC,OAAP,GAAiBC,KAAjB,C,CACA;;AACAF,MAAM,CAACC,OAAP,CAAeE,OAAf,GAAyBD,KAAzB;AAEA;AACA;AACA;;AAEAA,KAAK,CAACE,UAAN,GACAF,KAAK,CAACG,EAAN,GAAW,IAAI,GADf;AAGAH,KAAK,CAAC,IAAD,CAAL,GACAA,KAAK,CAAC,IAAD,CAAL,GACAA,KAAK,CAACI,EAAN,GACAJ,KAAK,CAACK,WAAN,GAAoB,IAAI,GAHxB;AAKAL,KAAK,CAACM,WAAN,GACAN,KAAK,CAACO,EAAN,GAAW,CADX;AAGAP,KAAK,CAACQ,MAAN,GACAR,KAAK,CAACS,GAAN,GACAT,KAAK,CAACU,CAAN,GAAUV,KAAK,CAACO,EAAN,GAAW,IAFrB;AAIAP,KAAK,CAACW,MAAN,GACAX,KAAK,CAACY,GAAN,GACAZ,KAAK,CAACa,CAAN,GAAUb,KAAK,CAACU,CAAN,GAAU,EAFpB;AAIAV,KAAK,CAACc,IAAN,GACAd,KAAK,CAACe,EAAN,GACAf,KAAK,CAACgB,CAAN,GAAUhB,KAAK,CAACa,CAAN,GAAU,EAFpB;AAIAb,KAAK,CAACiB,GAAN,GACAjB,KAAK,CAACkB,CAAN,GAAUlB,KAAK,CAACgB,CAAN,GAAU,EADpB;AAGAhB,KAAK,CAACmB,IAAN,GACAnB,KAAK,CAACoB,EAAN,GACApB,KAAK,CAACqB,CAAN,GAAUrB,KAAK,CAACkB,CAAN,GAAU,CAFpB;AAIAlB,KAAK,CAACsB,KAAN,GACAtB,KAAK,CAACuB,CAAN,GACAvB,KAAK,CAACkB,CAAN,IAAW,SAAS,EAApB,CAFA;AAIAlB,KAAK,CAACwB,IAAN,GACAxB,KAAK,CAACyB,EAAN,GACAzB,KAAK,CAAC0B,CAAN,GAAU1B,KAAK,CAACkB,CAAN,GAAU,MAFpB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASlB,KAAT,CAAe2B,GAAG,GAAC,EAAnB,EAAuBC,MAAM,GAAC,IAA9B,EAAmC;AACjC,MAAIC,MAAM,GAAG,IAAb,CADiC,CAEjC;;AACAF,EAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,YAAZ,EAA0B,MAA1B,CAAN;AACAH,EAAAA,GAAG,CAACG,OAAJ,CAAYjC,QAAZ,EAAsB,UAASkC,CAAT,EAAYC,CAAZ,EAAeC,KAAf,EAAqB;AACzCA,IAAAA,KAAK,GAAGjC,KAAK,CAACiC,KAAD,CAAL,IAAgBjC,KAAK,CAACiC,KAAK,CAACC,WAAN,GAAoBJ,OAApB,CAA4B,IAA5B,EAAkC,EAAlC,CAAD,CAA7B;AACA,QAAIG,KAAJ,EAAWJ,MAAM,GAAG,CAACA,MAAM,IAAI,CAAX,IAAgBM,UAAU,CAACH,CAAD,EAAI,EAAJ,CAAV,GAAoBC,KAA7C;AACZ,GAHD;AAKA,SAAOJ,MAAM,IAAKA,MAAM,GAAG7B,KAAK,CAAC4B,MAAD,CAAhC;AACD","sourcesContent":["'use strict'\r\n\r\nvar duration = /(-?(?:\\d+\\.?\\d*|\\d*\\.?\\d+)(?:e[-+]?\\d+)?)\\s*([a-zµμ]*)/ig\r\n\r\nmodule.exports = parse\r\n// enable default import syntax in typescript\r\nmodule.exports.default = parse\r\n\r\n/**\r\n * conversion ratios\r\n */\r\n\r\nparse.nanosecond =\r\nparse.ns = 1 / 1e6\r\n\r\nparse['µs'] =\r\nparse['μs'] =\r\nparse.us =\r\nparse.microsecond = 1 / 1e3\r\n\r\nparse.millisecond =\r\nparse.ms = 1\r\n\r\nparse.second =\r\nparse.sec =\r\nparse.s = parse.ms * 1000\r\n\r\nparse.minute =\r\nparse.min =\r\nparse.m = parse.s * 60\r\n\r\nparse.hour =\r\nparse.hr =\r\nparse.h = parse.m * 60\r\n\r\nparse.day =\r\nparse.d = parse.h * 24\r\n\r\nparse.week =\r\nparse.wk =\r\nparse.w = parse.d * 7\r\n\r\nparse.month =\r\nparse.b =\r\nparse.d * (365.25 / 12)\r\n\r\nparse.year =\r\nparse.yr =\r\nparse.y = parse.d * 365.25\r\n\r\n/**\r\n * convert `str` to ms\r\n *\r\n * @param {String} str\r\n * @param {String} format\r\n * @return {Number}\r\n */\r\n\r\nfunction parse(str='', format='ms'){\r\n  var result = null\r\n  // ignore commas\r\n  str = str.replace(/(\\d),(\\d)/g, '$1$2')\r\n  str.replace(duration, function(_, n, units){\r\n    units = parse[units] || parse[units.toLowerCase().replace(/s$/, '')]\r\n    if (units) result = (result || 0) + parseFloat(n, 10) * units\r\n  })\r\n\r\n  return result && (result / parse[format])\r\n}\r\n"]},"metadata":{},"sourceType":"script"}