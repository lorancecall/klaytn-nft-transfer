{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bitswap/unwant')>}\n   */\n  async function unwant(cid, options = {}) {\n    const res = await api.post('bitswap/unwant', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        // @ts-ignore - CID|string seems to confuse typedef\n        arg: typeof cid === 'string' ? cid : new CID(cid).toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    return res.json();\n  }\n\n  return unwant;\n});","map":{"version":3,"sources":["/home/lorancecall/Projects/vuejs-tutorial/testpage/node_modules/ipfs-http-client/src/bitswap/unwant.js"],"names":["CID","require","configure","toUrlSearchParams","module","exports","api","unwant","cid","options","res","post","timeout","signal","searchParams","arg","toString","headers","json"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AACF;AACA;AACE,iBAAeC,MAAf,CAAuBC,GAAvB,EAA4BC,OAAO,GAAG,EAAtC,EAA0C;AACxC,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,gBAAT,EAA2B;AAC3CC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OAD0B;AAE3CC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAF2B;AAG3CC,MAAAA,YAAY,EAAEX,iBAAiB,CAAC;AAC9B;AACAY,QAAAA,GAAG,EAAE,OAAOP,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgC,IAAIR,GAAJ,CAAQQ,GAAR,EAAaQ,QAAb,EAFP;AAG9B,WAAGP;AAH2B,OAAD,CAHY;AAQ3CQ,MAAAA,OAAO,EAAER,OAAO,CAACQ;AAR0B,KAA3B,CAAlB;AAWA,WAAOP,GAAG,CAACQ,IAAJ,EAAP;AACD;;AACD,SAAOX,MAAP;AACD,CAnByB,CAA1B","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bitswap/unwant')>}\n   */\n  async function unwant (cid, options = {}) {\n    const res = await api.post('bitswap/unwant', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        // @ts-ignore - CID|string seems to confuse typedef\n        arg: typeof cid === 'string' ? cid : new CID(cid).toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return unwant\n})\n"]},"metadata":{},"sourceType":"script"}