{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bitswap/wantlist')>}\n   */\n  async function wantlist(options = {}) {\n    const res = await (await api.post('bitswap/wantlist', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json();\n    return (res.Keys || []).map(k => new CID(k['/']));\n  }\n\n  return wantlist;\n});","map":{"version":3,"sources":["/home/lorancecall/Projects/vuejs-tutorial/testpage/node_modules/ipfs-http-client/src/bitswap/wantlist.js"],"names":["CID","require","configure","toUrlSearchParams","module","exports","api","wantlist","options","res","post","timeout","signal","searchParams","headers","json","Keys","map","k"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AACF;AACA;AACE,iBAAeC,QAAf,CAAyBC,OAAO,GAAG,EAAnC,EAAuC;AACrC,UAAMC,GAAG,GAAG,MAAM,CAAC,MAAMH,GAAG,CAACI,IAAJ,CAAS,kBAAT,EAA6B;AACpDC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OADmC;AAEpDC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFoC;AAGpDC,MAAAA,YAAY,EAAEV,iBAAiB,CAACK,OAAD,CAHqB;AAIpDM,MAAAA,OAAO,EAAEN,OAAO,CAACM;AAJmC,KAA7B,CAAP,EAKdC,IALc,EAAlB;AAOA,WAAO,CAACN,GAAG,CAACO,IAAJ,IAAY,EAAb,EAAiBC,GAAjB,CAAqBC,CAAC,IAAI,IAAIlB,GAAJ,CAAQkB,CAAC,CAAC,GAAD,CAAT,CAA1B,CAAP;AACD;;AACD,SAAOX,QAAP;AACD,CAfyB,CAA1B","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bitswap/wantlist')>}\n   */\n  async function wantlist (options = {}) {\n    const res = await (await api.post('bitswap/wantlist', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return (res.Keys || []).map(k => new CID(k['/']))\n  }\n  return wantlist\n})\n"]},"metadata":{},"sourceType":"script"}