{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-9ea40744\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Klaytn NFT transfer\")], -1\n/* HOISTED */\n));\n\nconst _hoisted_2 = {\n  class: \"home\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ModalComp = _resolveComponent(\"ModalComp\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_ModalComp, {\n    onClose: $setup.toggleModal,\n    modalActive: $setup.modalActive\n  }, null, 8\n  /* PROPS */\n  , [\"onClose\", \"modalActive\"]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.connect && $setup.connect(...args)),\n    type: \"button\"\n  }, \"Connect Wallet\"), _createCommentVNode(\" <alert-comp @close=\\\"toggleAlert\\\" :alertActive=\\\"alertActive\\\">\\n        <div class=\\\"modal-content\\\">\\n          <p>Kaikas is not installed</p>\\n        </div>\\n      </alert-comp> \")])]);\n}","map":{"version":3,"mappings":";;;;gEAEIA,oBAEM,KAFN,EAEM;AAFDC,OAAK,EAAC;AAEL,CAFN,EAAkB,cAChBD,oBAA4B,IAA5B,EAA4B,IAA5B,EAAI,qBAAJ,CADgB,CAAlB;;AAAA;;;AAGKC,OAAK,EAAC;;;;;uBAJbC,oBAaM,KAbN,EAaM,IAbN,EAaM,CAZJC,UAYI,EATJH,oBAQM,KARN,cAQM,CAPJI,aAA6DC,oBAA7D,EAA6D;AAAjDC,WAAK,EAAEC,kBAA0C;AAA5BC,eAAW,EAAED;AAAe,GAA7D;;AAAA,+BAOI,EANJP,oBAA8D,QAA9D,EAA8D;AAArDS,WAAK,yCAAEF,yCAAF,CAAgD;AAArCG,QAAI,EAAC;AAAgC,GAA9D,EAAuC,gBAAvC,CAMI,EALJC,+MAKI,CARN,CASI,CAbN","names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_createVNode","_component_ModalComp","onClose","$setup","modalActive","onClick","type","_createCommentVNode"],"sourceRoot":"","sources":["/home/lorancecall/Projects/vuejs-tutorial/klaytn-nft-transfer/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"title\">\n      <h1>Klaytn NFT transfer</h1>\n    </div>\n    <div class=\"home\">\n      <ModalComp @close=\"toggleModal\" :modalActive=\"modalActive\" />\n      <button @click=\"connect\" type=\"button\">Connect Wallet</button>\n      <!-- <alert-comp @close=\"toggleAlert\" :alertActive=\"alertActive\">\n        <div class=\"modal-content\">\n          <p>Kaikas is not installed</p>\n        </div>\n      </alert-comp> -->\n    </div>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport ModalComp from \"@/components/ModalComp.vue\";\n// import AlertComp from \"@/components/AlertComp.vue\";\nimport { ref } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  name: \"HomeView\",\n  components: {\n    ModalComp,\n    // AlertComp,\n  },\n\n  setup() {\n    // console.log(this.$store);\n\n    const store = useStore();\n\n    const modalActive = ref(false);\n    // const alertActive = ref(false);\n\n    const connect = async () => {\n      await store.commit(\"connectWallet\");\n\n      if (store.state.klaytn !== undefined) {\n        await toggleModal();\n      } else {\n      }\n    };\n\n    const toggleModal = () => {\n      modalActive.value = !modalActive.value;\n    };\n\n    // const toggleAlert = () => {\n    //   alertActive.value = !alertActive.value;\n    // };\n    return { modalActive, toggleModal, connect };\n    // return { modalActive, alertActive, toggleModal, toggleAlert, connect };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.title {\n  height: 20vh;\n}\n\n.home {\n  height: 80vh;\n}\n\n.title,\n.home {\n  background-color: rgba(0, 176, 235, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  .modal-content {\n    display: flex;\n    flex-direction: column;\n\n    input {\n      position: relative;\n    }\n\n    h1,\n    p {\n      margin-bottom: 16px;\n    }\n\n    h1 {\n      font-size: 32px;\n    }\n\n    p {\n      font-size: 18px;\n    }\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}