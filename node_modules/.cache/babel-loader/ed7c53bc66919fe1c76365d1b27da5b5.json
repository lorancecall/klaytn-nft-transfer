{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/dag/resolve')>}\n   */\n  const resolve = async (ipfsPath, options = {}) => {\n    const res = await api.post('dag/resolve', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ipfsPath}${options.path ? `/${options.path}`.replace(/\\/[/]+/g, '/') : ''}`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      cid: new CID(data.Cid['/']),\n      remainderPath: data.RemPath\n    };\n  };\n\n  return resolve;\n});","map":{"version":3,"sources":["/home/lorancecall/Projects/vuejs-tutorial/testpage/node_modules/ipfs-http-client/src/dag/resolve.js"],"names":["CID","require","configure","toUrlSearchParams","module","exports","api","resolve","ipfsPath","options","res","post","timeout","signal","searchParams","arg","path","replace","headers","data","json","cid","Cid","remainderPath","RemPath"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AACF;AACA;AACE,QAAMC,OAAO,GAAG,OAAOC,QAAP,EAAiBC,OAAO,GAAG,EAA3B,KAAkC;AAChD,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,aAAT,EAAwB;AACxCC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OADuB;AAExCC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFwB;AAGxCC,MAAAA,YAAY,EAAEX,iBAAiB,CAAC;AAC9BY,QAAAA,GAAG,EAAG,GAAEP,QAAS,GAAEC,OAAO,CAACO,IAAR,GAAgB,IAAGP,OAAO,CAACO,IAAK,EAAjB,CAAmBC,OAAnB,CAA2B,SAA3B,EAAsC,GAAtC,CAAf,GAA4D,EAAG,EADpD;AAE9B,WAAGR;AAF2B,OAAD,CAHS;AAOxCS,MAAAA,OAAO,EAAET,OAAO,CAACS;AAPuB,KAAxB,CAAlB;AAUA,UAAMC,IAAI,GAAG,MAAMT,GAAG,CAACU,IAAJ,EAAnB;AAEA,WAAO;AAAEC,MAAAA,GAAG,EAAE,IAAIrB,GAAJ,CAAQmB,IAAI,CAACG,GAAL,CAAS,GAAT,CAAR,CAAP;AAA+BC,MAAAA,aAAa,EAAEJ,IAAI,CAACK;AAAnD,KAAP;AACD,GAdD;;AAgBA,SAAOjB,OAAP;AACD,CArByB,CAA1B","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/dag/resolve')>}\n   */\n  const resolve = async (ipfsPath, options = {}) => {\n    const res = await api.post('dag/resolve', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ipfsPath}${options.path ? `/${options.path}`.replace(/\\/[/]+/g, '/') : ''}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n\n    return { cid: new CID(data.Cid['/']), remainderPath: data.RemPath }\n  }\n\n  return resolve\n})\n"]},"metadata":{},"sourceType":"script"}