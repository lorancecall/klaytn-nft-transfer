{"ast":null,"code":"import { ref } from \"vue\";\nimport CustomForm from \"@/components/CustomForm.vue\";\nimport { useStore } from \"vuex\";\nexport default {\n  components: {\n    CustomForm\n  },\n  props: {\n    modalActive: Boolean\n  },\n\n  setup(props, {\n    emit\n  }) {\n    // data\n    const contractId = ref(\"\");\n    const tokenId = ref(\"\");\n    const toAddress = ref(\"\");\n    const store = useStore();\n\n    const close = () => {\n      emit(\"close\");\n    };\n\n    const sendTx = async () => {\n      const klay = store.state.caver.rpc.klay();\n      const fromAddress = store.state.addresses[0];\n      const inputData = store.state.caver.abi.encodeFunctionCall({\n        constant: false,\n        inputs: [{\n          name: \"from\",\n          type: \"address\"\n        }, {\n          name: \"to\",\n          type: \"address\"\n        }, {\n          name: \"tokenId\",\n          type: \"uint256\"\n        }],\n        name: \"transferFrom\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n      }, [fromAddress, toAddress, tokenId]);\n      const receipt = await klay.sendTransaction({\n        type: \"SMART_CONTRACT_EXECUTION\",\n        from: fromAddress,\n        to: contractId,\n        data: inputData,\n        gas: 300000,\n        value: 0\n      });\n      return receipt;\n    };\n\n    return {\n      contractId,\n      tokenId,\n      toAddress,\n      close,\n      sendTx\n    };\n  }\n\n};","map":{"version":3,"mappings":"AA2BA,SAASA,GAAT,QAAoB,KAApB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,QAAT,QAAyB,MAAzB;AAEA,eAAe;AACbC,YAAU,EAAE;AACVF;AADU,GADC;AAIbG,OAAK,EAAE;AACLC,eAAW,EAAEC;AADR,GAJM;;AAQbC,OAAK,CAACH,KAAD,EAAQ;AAAEI;AAAF,GAAR,EAAkB;AACrB;AACA,UAAMC,UAAS,GAAIT,GAAG,CAAC,EAAD,CAAtB;AACA,UAAMU,OAAM,GAAIV,GAAG,CAAC,EAAD,CAAnB;AACA,UAAMW,SAAQ,GAAIX,GAAG,CAAC,EAAD,CAArB;AACA,UAAMY,KAAI,GAAIV,QAAQ,EAAtB;;AAEA,UAAMW,KAAI,GAAI,MAAM;AAClBL,UAAI,CAAC,OAAD,CAAJ;AACD,KAFD;;AAGA,UAAMM,MAAK,GAAI,YAAY;AACzB,YAAMC,IAAG,GAAIH,KAAK,CAACI,KAAN,CAAYC,KAAZ,CAAkBC,GAAlB,CAAsBH,IAAtB,EAAb;AACA,YAAMI,WAAU,GAAIP,KAAK,CAACI,KAAN,CAAYI,SAAZ,CAAsB,CAAtB,CAApB;AACA,YAAMC,SAAQ,GAAIT,KAAK,CAACI,KAAN,CAAYC,KAAZ,CAAkBK,GAAlB,CAAsBC,kBAAtB,CAChB;AACEC,gBAAQ,EAAE,KADZ;AAEEC,cAAM,EAAE,CACN;AAAEC,cAAI,EAAE,MAAR;AAAgBC,cAAI,EAAE;AAAtB,SADM,EAEN;AAAED,cAAI,EAAE,IAAR;AAAcC,cAAI,EAAE;AAApB,SAFM,EAGN;AAAED,cAAI,EAAE,SAAR;AAAmBC,cAAI,EAAE;AAAzB,SAHM,CAFV;AAOED,YAAI,EAAE,cAPR;AAQEE,eAAO,EAAE,EARX;AASEC,eAAO,EAAE,KATX;AAUEC,uBAAe,EAAE,YAVnB;AAWEH,YAAI,EAAE;AAXR,OADgB,EAchB,CAACR,WAAD,EAAcR,SAAd,EAAyBD,OAAzB,CAdgB,CAAlB;AAgBA,YAAMqB,OAAM,GAAI,MAAMhB,IAAI,CAACiB,eAAL,CAAqB;AACzCL,YAAI,EAAE,0BADmC;AAEzCM,YAAI,EAAEd,WAFmC;AAGzCe,UAAE,EAAEzB,UAHqC;AAIzC0B,YAAI,EAAEd,SAJmC;AAKzCe,WAAG,EAAE,MALoC;AAMzCC,aAAK,EAAE;AANkC,OAArB,CAAtB;AAQA,aAAON,OAAP;AACD,KA5BD;;AA8BA,WAAO;AAAEtB,gBAAF;AAAcC,aAAd;AAAuBC,eAAvB;AAAkCE,WAAlC;AAAyCC;AAAzC,KAAP;AACD;;AAjDY,CAAf","names":["ref","CustomForm","useStore","components","props","modalActive","Boolean","setup","emit","contractId","tokenId","toAddress","store","close","sendTx","klay","state","caver","rpc","fromAddress","addresses","inputData","abi","encodeFunctionCall","constant","inputs","name","type","outputs","payable","stateMutability","receipt","sendTransaction","from","to","data","gas","value"],"sourceRoot":"","sources":["/home/lorancecall/Projects/vuejs-tutorial/klaytn-nft-transfer/src/components/ModalComp.vue"],"sourcesContent":["<template>\n  <transition name=\"modal-animation\">\n    <div v-show=\"modalActive\" class=\"modal\">\n      <transition name=\"model-animation-inner\">\n        <div v-show=\"modalActive\" class=\"modal-inner\">\n          <i @click=\"close\" class=\"fa-regular fa-circle-xmark\"></i>\n          <!-- Modal Content -->\n          <h1>NFT transfer</h1>\n          <div class=\"modal-content\">\n            <div v-show=\"$store.state.klaytn !== undefined\">\n              <b>connected wallet</b>: {{ $store.state.addresses }}\n            </div>\n            <custom-form\n              v-model:contractId=\"contractId\"\n              v-model:tokenId=\"tokenId\"\n              v-model:toAddress=\"toAddress\"\n            />\n          </div>\n          <button @click=\"close\" type=\"button\">Close</button>\n          <button @click=\"sendTx\" type=\"button\">Send</button>\n        </div>\n      </transition>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport CustomForm from \"@/components/CustomForm.vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  components: {\n    CustomForm,\n  },\n  props: {\n    modalActive: Boolean,\n  },\n\n  setup(props, { emit }) {\n    // data\n    const contractId = ref(\"\");\n    const tokenId = ref(\"\");\n    const toAddress = ref(\"\");\n    const store = useStore();\n\n    const close = () => {\n      emit(\"close\");\n    };\n    const sendTx = async () => {\n      const klay = store.state.caver.rpc.klay();\n      const fromAddress = store.state.addresses[0];\n      const inputData = store.state.caver.abi.encodeFunctionCall(\n        {\n          constant: false,\n          inputs: [\n            { name: \"from\", type: \"address\" },\n            { name: \"to\", type: \"address\" },\n            { name: \"tokenId\", type: \"uint256\" },\n          ],\n          name: \"transferFrom\",\n          outputs: [],\n          payable: false,\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        [fromAddress, toAddress, tokenId]\n      );\n      const receipt = await klay.sendTransaction({\n        type: \"SMART_CONTRACT_EXECUTION\",\n        from: fromAddress,\n        to: contractId,\n        data: inputData,\n        gas: 300000,\n        value: 0,\n      });\n      return receipt;\n    };\n\n    return { contractId, tokenId, toAddress, close, sendTx };\n  },\n};\n</script>\n\n<style lang='scss' scoped>\n.modal-animation-enter-active,\n.modal-animation-leave-active {\n  transition: opacity 0.3s cubic-bezier(0.52, 0.02, 0.19, 1.02);\n}\n\n.modal-animation-enter-from,\n.modal-animation-leave-to {\n  opacity: 0;\n}\n\n.modal-animation-inner-enter-active {\n  transition: opacity 0.3s cubic-bezier(0.52, 0.02, 0.19, 1.02) 0.15s;\n}\n\n.modal-animation-inner-leave-active {\n  transition: opacity 0.3s cubic-bezier(0.52, 0.02, 0.19, 1.02) 0.15s;\n}\n\n.modal-animation-inner-enter-from {\n  opacity: 0;\n  transform: scale(0.8);\n}\n\n.modal-animation-inner-leave-to {\n  transform: scale(0.8);\n}\n\n.modal {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: rgba($color: #ffffff, $alpha: 0.7);\n\n  .modal-inner {\n    position: relative;\n    max-width: 640px;\n    width: 80%;\n    box-shadow: 0 4px 6px -1px rgba($color: #000000, $alpha: 0.1),\n      0 2px 4px -1px rgba($color: #000000, $alpha: 0.06);\n    background-color: #fff;\n    padding: 64px 16px;\n\n    i {\n      position: absolute;\n      top: 15px;\n      right: 15px;\n      font-size: 20px;\n      cursor: pointer;\n\n      &:hover {\n        color: crimson;\n      }\n    }\n\n    button {\n      padding: 20px 30px;\n      margin-left: 5px;\n      margin-right: 5px;\n      border: none;\n      font-size: 16px;\n      background-color: crimson;\n      color: #fff;\n      cursor: pointer;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}