{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { createStore } from \"vuex\";\nimport Caver from \"caver-js\"; // Create a new store instance.\n\nconst store = createStore({\n  state() {\n    return {\n      klaytn: null,\n      addresses: null,\n      caver: null,\n      abi: [{\n        constant: false,\n        inputs: [{\n          name: \"from\",\n          type: \"address\"\n        }, {\n          name: \"to\",\n          type: \"address\"\n        }, {\n          name: \"tokenId\",\n          type: \"uint256\"\n        }],\n        name: \"transferFrom\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n      }, {\n        constant: false,\n        inputs: [{\n          name: \"owner\",\n          type: \"address\"\n        }],\n        name: \"balanceOf\",\n        outputs: [{\n          name: \"amount\",\n          type: \"uint256\"\n        }],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n      }]\n    };\n  },\n\n  mutations: {\n    async connectWallet(state) {\n      if (window.klaytn !== undefined) {\n        state.klaytn = window.klaytn;\n        state.addresses = await state.klaytn.enable().catch(error => {\n          console.error(error);\n          return null;\n        });\n        state.caver = new Caver(state.klaytn);\n      } else {\n        throw new Error(\"Kaikas Not Installed!\");\n      }\n    }\n\n  }\n});\nexport default store;","map":{"version":3,"sources":["/home/lorancecall/Projects/vuejs-tutorial/testpage/src/store/index.js"],"names":["createStore","Caver","store","state","klaytn","addresses","caver","abi","constant","inputs","name","type","outputs","payable","stateMutability","mutations","connectWallet","window","undefined","enable","catch","error","console","Error"],"mappings":";AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,OAAOC,KAAP,MAAkB,UAAlB,C,CAEA;;AACA,MAAMC,KAAK,GAAGF,WAAW,CAAC;AACxBG,EAAAA,KAAK,GAAG;AACN,WAAO;AACLC,MAAAA,MAAM,EAAE,IADH;AAELC,MAAAA,SAAS,EAAE,IAFN;AAGLC,MAAAA,KAAK,EAAE,IAHF;AAILC,MAAAA,GAAG,EAAE,CACH;AACEC,QAAAA,QAAQ,EAAE,KADZ;AAEEC,QAAAA,MAAM,EAAE,CACN;AAAEC,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,IAAI,EAAE;AAAtB,SADM,EAEN;AAAED,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,IAAI,EAAE;AAApB,SAFM,EAGN;AAAED,UAAAA,IAAI,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAHM,CAFV;AAOED,QAAAA,IAAI,EAAE,cAPR;AAQEE,QAAAA,OAAO,EAAE,EARX;AASEC,QAAAA,OAAO,EAAE,KATX;AAUEC,QAAAA,eAAe,EAAE,YAVnB;AAWEH,QAAAA,IAAI,EAAE;AAXR,OADG,EAcH;AACEH,QAAAA,QAAQ,EAAE,KADZ;AAEEC,QAAAA,MAAM,EAAE,CAAC;AAAEC,UAAAA,IAAI,EAAE,OAAR;AAAiBC,UAAAA,IAAI,EAAE;AAAvB,SAAD,CAFV;AAGED,QAAAA,IAAI,EAAE,WAHR;AAIEE,QAAAA,OAAO,EAAE,CAAC;AAAEF,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,IAAI,EAAE;AAAxB,SAAD,CAJX;AAKEE,QAAAA,OAAO,EAAE,KALX;AAMEC,QAAAA,eAAe,EAAE,YANnB;AAOEH,QAAAA,IAAI,EAAE;AAPR,OAdG;AAJA,KAAP;AA6BD,GA/BuB;;AAgCxBI,EAAAA,SAAS,EAAE;AACT,UAAMC,aAAN,CAAoBb,KAApB,EAA2B;AACzB,UAAIc,MAAM,CAACb,MAAP,KAAkBc,SAAtB,EAAiC;AAC/Bf,QAAAA,KAAK,CAACC,MAAN,GAAea,MAAM,CAACb,MAAtB;AACAD,QAAAA,KAAK,CAACE,SAAN,GAAkB,MAAMF,KAAK,CAACC,MAAN,CAAae,MAAb,GAAsBC,KAAtB,CAA6BC,KAAD,IAAW;AAC7DC,UAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,iBAAO,IAAP;AACD,SAHuB,CAAxB;AAIAlB,QAAAA,KAAK,CAACG,KAAN,GAAc,IAAIL,KAAJ,CAAUE,KAAK,CAACC,MAAhB,CAAd;AACD,OAPD,MAOO;AACL,cAAM,IAAImB,KAAJ,CAAU,uBAAV,CAAN;AACD;AACF;;AAZQ;AAhCa,CAAD,CAAzB;AAgDA,eAAerB,KAAf","sourcesContent":["import { createStore } from \"vuex\";\nimport Caver from \"caver-js\";\n\n// Create a new store instance.\nconst store = createStore({\n  state() {\n    return {\n      klaytn: null,\n      addresses: null,\n      caver: null,\n      abi: [\n        {\n          constant: false,\n          inputs: [\n            { name: \"from\", type: \"address\" },\n            { name: \"to\", type: \"address\" },\n            { name: \"tokenId\", type: \"uint256\" },\n          ],\n          name: \"transferFrom\",\n          outputs: [],\n          payable: false,\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          constant: false,\n          inputs: [{ name: \"owner\", type: \"address\" }],\n          name: \"balanceOf\",\n          outputs: [{ name: \"amount\", type: \"uint256\" }],\n          payable: false,\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n      ],\n    };\n  },\n  mutations: {\n    async connectWallet(state) {\n      if (window.klaytn !== undefined) {\n        state.klaytn = window.klaytn;\n        state.addresses = await state.klaytn.enable().catch((error) => {\n          console.error(error);\n          return null;\n        });\n        state.caver = new Caver(state.klaytn);\n      } else {\n        throw new Error(\"Kaikas Not Installed!\");\n      }\n    },\n  },\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}