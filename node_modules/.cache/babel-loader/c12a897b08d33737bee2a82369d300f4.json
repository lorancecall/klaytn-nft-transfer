{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nconst CID = require('cids');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/files/flush')>}\n   */\n  async function flush(path, options = {}) {\n    if (!path || typeof path !== 'string') {\n      throw new Error('ipfs.files.flush requires a path');\n    }\n\n    const res = await api.post('files/flush', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return new CID(data.Cid);\n  }\n\n  return flush;\n});","map":{"version":3,"sources":["/home/lorancecall/Projects/vuejs-tutorial/testpage/node_modules/ipfs-http-client/src/files/flush.js"],"names":["CID","require","configure","toUrlSearchParams","module","exports","api","flush","path","options","Error","res","post","timeout","signal","searchParams","arg","headers","data","json","Cid"],"mappings":"AAAA;;;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AACF;AACA;AACE,iBAAeC,KAAf,CAAsBC,IAAtB,EAA4BC,OAAO,GAAG,EAAtC,EAA0C;AACxC,QAAI,CAACD,IAAD,IAAS,OAAOA,IAAP,KAAgB,QAA7B,EAAuC;AACrC,YAAM,IAAIE,KAAJ,CAAU,kCAAV,CAAN;AACD;;AAED,UAAMC,GAAG,GAAG,MAAML,GAAG,CAACM,IAAJ,CAAS,aAAT,EAAwB;AACxCC,MAAAA,OAAO,EAAEJ,OAAO,CAACI,OADuB;AAExCC,MAAAA,MAAM,EAAEL,OAAO,CAACK,MAFwB;AAGxCC,MAAAA,YAAY,EAAEZ,iBAAiB,CAAC;AAC9Ba,QAAAA,GAAG,EAAER,IADyB;AAE9B,WAAGC;AAF2B,OAAD,CAHS;AAOxCQ,MAAAA,OAAO,EAAER,OAAO,CAACQ;AAPuB,KAAxB,CAAlB;AASA,UAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AAEA,WAAO,IAAInB,GAAJ,CAAQkB,IAAI,CAACE,GAAb,CAAP;AACD;;AAED,SAAOb,KAAP;AACD,CAxByB,CAA1B","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/files/flush')>}\n   */\n  async function flush (path, options = {}) {\n    if (!path || typeof path !== 'string') {\n      throw new Error('ipfs.files.flush requires a path')\n    }\n\n    const res = await api.post('files/flush', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return new CID(data.Cid)\n  }\n\n  return flush\n})\n"]},"metadata":{},"sourceType":"script"}