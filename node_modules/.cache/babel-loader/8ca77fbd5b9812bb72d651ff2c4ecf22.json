{"ast":null,"code":"import { ref } from \"vue\";\nimport CustomForm from \"@/components/CustomForm.vue\"; // import { useStore } from \"vuex\";\n\nexport default {\n  components: {\n    CustomForm\n  },\n  props: {\n    modalActive: Boolean\n  },\n\n  setup(props, {\n    emit\n  }) {\n    // data\n    const contractId = ref(\"\");\n    const tokenId = ref(\"\");\n    const toAddress = ref(\"\"); // const store = useStore();\n\n    const close = () => {\n      emit(\"close\");\n    };\n\n    const sendTx = async () => {\n      console.log(contractId.value, tokenId.value, toAddress.value);\n      const abi = [{\n        constant: false,\n        input: [{\n          name: \"from\",\n          type: \"address\"\n        }, {\n          name: \"to\",\n          type: \"address\"\n        }, {\n          name: \"tokenId\",\n          type: \"unt245\"\n        }],\n        name: \"transferFrom\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n      }, {\n        constant: false,\n        input: [{\n          name: \"owner\",\n          type: \"address\"\n        }],\n        name: \"balanceOf\",\n        outputs: [{\n          name: \"amount\",\n          type: \"uint256\"\n        }],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n      }];\n      console.log(abi, contractId.value); // const myContract = new store.state.caver.contract(\n      //   abi,\n      //   contractId.value.toString()\n      // );\n      // console.log(\n      //   myContract\n      //   // await myContract.method\n      //   //   .balanceOf(store.state.addresses[0].toString())\n      //   //   .call()\n      // );\n    };\n\n    return {\n      contractId,\n      tokenId,\n      toAddress,\n      close,\n      sendTx\n    };\n  }\n\n};","map":{"version":3,"mappings":"AA2BA,SAASA,GAAT,QAAoB,KAApB;AACA,OAAOC,UAAP,MAAuB,6BAAvB,C,CACA;;AAEA,eAAe;AACbC,YAAU,EAAE;AACVD;AADU,GADC;AAIbE,OAAK,EAAE;AACLC,eAAW,EAAEC;AADR,GAJM;;AAQbC,OAAK,CAACH,KAAD,EAAQ;AAAEI;AAAF,GAAR,EAAkB;AACrB;AACA,UAAMC,UAAS,GAAIR,GAAG,CAAC,EAAD,CAAtB;AACA,UAAMS,OAAM,GAAIT,GAAG,CAAC,EAAD,CAAnB;AACA,UAAMU,SAAQ,GAAIV,GAAG,CAAC,EAAD,CAArB,CAJqB,CAKrB;;AAEA,UAAMW,KAAI,GAAI,MAAM;AAClBJ,UAAI,CAAC,OAAD,CAAJ;AACD,KAFD;;AAGA,UAAMK,MAAK,GAAI,YAAY;AACzBC,aAAO,CAACC,GAAR,CAAYN,UAAU,CAACO,KAAvB,EAA8BN,OAAO,CAACM,KAAtC,EAA6CL,SAAS,CAACK,KAAvD;AACA,YAAMC,GAAE,GAAI,CACV;AACEC,gBAAQ,EAAE,KADZ;AAEEC,aAAK,EAAE,CACL;AAAEC,cAAI,EAAE,MAAR;AAAgBC,cAAI,EAAE;AAAtB,SADK,EAEL;AAAED,cAAI,EAAE,IAAR;AAAcC,cAAI,EAAE;AAApB,SAFK,EAGL;AAAED,cAAI,EAAE,SAAR;AAAmBC,cAAI,EAAE;AAAzB,SAHK,CAFT;AAOED,YAAI,EAAE,cAPR;AAQEE,eAAO,EAAE,EARX;AASEC,eAAO,EAAE,KATX;AAUEC,uBAAe,EAAE,YAVnB;AAWEH,YAAI,EAAE;AAXR,OADU,EAcV;AACEH,gBAAQ,EAAE,KADZ;AAEEC,aAAK,EAAE,CAAC;AAAEC,cAAI,EAAE,OAAR;AAAiBC,cAAI,EAAE;AAAvB,SAAD,CAFT;AAGED,YAAI,EAAE,WAHR;AAIEE,eAAO,EAAE,CAAC;AAAEF,cAAI,EAAE,QAAR;AAAkBC,cAAI,EAAE;AAAxB,SAAD,CAJX;AAKEE,eAAO,EAAE,KALX;AAMEC,uBAAe,EAAE,YANnB;AAOEH,YAAI,EAAE;AAPR,OAdU,CAAZ;AAwBAP,aAAO,CAACC,GAAR,CAAYE,GAAZ,EAAiBR,UAAU,CAACO,KAA5B,EA1ByB,CA2BzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KArCD;;AAuCA,WAAO;AAAEP,gBAAF;AAAcC,aAAd;AAAuBC,eAAvB;AAAkCC,WAAlC;AAAyCC;AAAzC,KAAP;AACD;;AA1DY,CAAf","names":["ref","CustomForm","components","props","modalActive","Boolean","setup","emit","contractId","tokenId","toAddress","close","sendTx","console","log","value","abi","constant","input","name","type","outputs","payable","stateMutability"],"sourceRoot":"","sources":["/home/lorancecall/Projects/vuejs-tutorial/testpage/src/components/ModalComp.vue"],"sourcesContent":["<template>\n  <transition name=\"modal-animation\">\n    <div v-show=\"modalActive\" class=\"modal\">\n      <transition name=\"model-animation-inner\">\n        <div v-show=\"modalActive\" class=\"modal-inner\">\n          <i @click=\"close\" class=\"fa-regular fa-circle-xmark\"></i>\n          <!-- Modal Content -->\n          <h1>NFT transfer</h1>\n          <div class=\"modal-content\">\n            <div v-show=\"$store.state.klaytn !== undefined\">\n              <b>connected wallet</b>: {{ $store.state.addresses }}\n            </div>\n            <custom-form\n              v-model:contractId=\"contractId\"\n              v-model:tokenId=\"tokenId\"\n              v-model:toAddress=\"toAddress\"\n            />\n          </div>\n          <button @click=\"close\" type=\"button\">Close</button>\n          <button @click=\"sendTx\" type=\"button\">Send</button>\n        </div>\n      </transition>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport CustomForm from \"@/components/CustomForm.vue\";\n// import { useStore } from \"vuex\";\n\nexport default {\n  components: {\n    CustomForm,\n  },\n  props: {\n    modalActive: Boolean,\n  },\n\n  setup(props, { emit }) {\n    // data\n    const contractId = ref(\"\");\n    const tokenId = ref(\"\");\n    const toAddress = ref(\"\");\n    // const store = useStore();\n\n    const close = () => {\n      emit(\"close\");\n    };\n    const sendTx = async () => {\n      console.log(contractId.value, tokenId.value, toAddress.value);\n      const abi = [\n        {\n          constant: false,\n          input: [\n            { name: \"from\", type: \"address\" },\n            { name: \"to\", type: \"address\" },\n            { name: \"tokenId\", type: \"unt245\" },\n          ],\n          name: \"transferFrom\",\n          outputs: [],\n          payable: false,\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          constant: false,\n          input: [{ name: \"owner\", type: \"address\" }],\n          name: \"balanceOf\",\n          outputs: [{ name: \"amount\", type: \"uint256\" }],\n          payable: false,\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n      ];\n      console.log(abi, contractId.value);\n      // const myContract = new store.state.caver.contract(\n      //   abi,\n      //   contractId.value.toString()\n      // );\n      // console.log(\n      //   myContract\n      //   // await myContract.method\n      //   //   .balanceOf(store.state.addresses[0].toString())\n      //   //   .call()\n      // );\n    };\n\n    return { contractId, tokenId, toAddress, close, sendTx };\n  },\n};\n</script>\n\n<style lang='scss' scoped>\n.modal-animation-enter-active,\n.modal-animation-leave-active {\n  transition: opacity 0.3s cubic-bezier(0.52, 0.02, 0.19, 1.02);\n}\n\n.modal-animation-enter-from,\n.modal-animation-leave-to {\n  opacity: 0;\n}\n\n.modal-animation-inner-enter-active {\n  transition: opacity 0.3s cubic-bezier(0.52, 0.02, 0.19, 1.02) 0.15s;\n}\n\n.modal-animation-inner-leave-active {\n  transition: opacity 0.3s cubic-bezier(0.52, 0.02, 0.19, 1.02) 0.15s;\n}\n\n.modal-animation-inner-enter-from {\n  opacity: 0;\n  transform: scale(0.8);\n}\n\n.modal-animation-inner-leave-to {\n  transform: scale(0.8);\n}\n\n.modal {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: rgba($color: #ffffff, $alpha: 0.7);\n\n  .modal-inner {\n    position: relative;\n    max-width: 640px;\n    width: 80%;\n    box-shadow: 0 4px 6px -1px rgba($color: #000000, $alpha: 0.1),\n      0 2px 4px -1px rgba($color: #000000, $alpha: 0.06);\n    background-color: #fff;\n    padding: 64px 16px;\n\n    i {\n      position: absolute;\n      top: 15px;\n      right: 15px;\n      font-size: 20px;\n      cursor: pointer;\n\n      &:hover {\n        color: crimson;\n      }\n    }\n\n    button {\n      padding: 20px 30px;\n      margin-left: 5px;\n      margin-right: 5px;\n      border: none;\n      font-size: 16px;\n      background-color: crimson;\n      color: #fff;\n      cursor: pointer;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}